!function(){"use strict";function e(e,n,o,s){var i={},r=function(){if("undefined"!=typeof n.plugins)n.plugins.jPushPlugin.init(),n.plugins.jmessagePlugin.init();else{console.log(typeof device),console.log("test for browser");var e={login:function(e,n,o,s){o("im login success")},logout:function(){},getSingleHistoryMessage:function(){},sendSingleTextMessage:function(){},getSingleConversationList:function(){}},o={};n.plugins={},n.plugins.jPushPlugin=o,n.plugins.jmessagePlugin=e}},g=function(e,o,s,i){n.plugins.jmessagePlugin.username="",n.plugins.jmessagePlugin.login(e,o,function(o){var i=JSON.stringify(o);console.log("login callback sucess"+i),n.plugins.jmessagePlugin.username=e,s(o)},function(e){var n=JSON.stringify(e);console.log("login callback fail"+n),alert("login fail. errcode:"+e.errorCode+"  error discription:"+e.errorDscription),console.log(device.platform),console.log(e.errorCode),i(e),"801003"==e.errorCode&&console.log("用户未注册")})},l=function(e,n){var o=s.defer();return o.resolve(),o.promise},t=function(o,i){var r=s.defer();if("undefined"==typeof n.plugins.jmessagePlugin.login)return r.reject(),r.promise;try{n.plugins.jmessagePlugin.username="",n.plugins.jmessagePlugin.login(o,i,function(e){var s=JSON.stringify(e);console.log("login callback sucess"+s),n.plugins.jmessagePlugin.username=o,r.resolve()},function(e){var n=JSON.stringify(e);console.log("login callback fail"+n),console.log("login fail. errcode:"+e.errorCode+"  error discription:"+e.errorDscription),console.log(device.platform),console.log(e.errorCode),"801003"==e.errorCode&&console.log("用户未注册"),r.reject("im登录失败，错误码为"+e.errorCode)})}catch(g){e.error("loginForPromise failed!"+JSON.stringify(g)),r.reject(g)}return r.promise},a=function(){console.log("logout"),n.plugins.jmessagePlugin.logout(function(e){console.log("logout success"),n.plugins.jmessagePlugin.username=""},function(e){console.log("logout fail")})},c=function(e,o,s,i,r){console.log("getMessageHistory lastest 50 message with username:"+e),n.plugins.jmessagePlugin.getSingleHistoryMessage(e,o,s,function(e){var n=JSON.stringify(e);console.log("getMessageHistory ok: "+n),i(e)},function(e){alert("getMessageHistory failed"),console.log("getMessageHistory fail"+e),r(e)})},u=function(e,o,s,i,r,g){console.log("send message to "+o+" :content is "+i),n.plugins.jmessagePlugin.sendSingleTextMessage(o,i,appConfig.JPUSH_APPKEY,function(e){var n=JSON.stringify(e);console.log("send message sucess"+n);var o=new Object;o.text=i;var s=new Object;s.msg_type="text",s.from_name=window.plugins.jmessagePlugin.username,s.from_id=window.plugins.jmessagePlugin.username,s.msg_body="text",s.create_time=(new Date).getTime(),r(e)},function(e){console.log("send message fail"+e),g(e)})},f=function(e,o){console.log("updateConversationList"),console.log("plugins:"+JSON.stringify(n.plugins)),n.plugins.jmessagePlugin.getSingleConversationList(function(n){var o=JSON.stringify(n);console.log("getAllSingleConversation ok"+o),e(n)},function(e){alert("getAllSingleConversation failed"),console.log("getAllSingleConversation fail"+e),o(e)})},m=function(){return n.plugins.jmessagePlugin.username},p=function(e){o.on("jmessage.conversationChange",e.onConversatinoChange),o.on("jmessage.singleReceiveMessage",e.onSingleReceiveMessage),o.on("jmessage.onReceiveMessage",e.onSingleReceiveMessage),o.on("jmessage.onOpenMessage",e.onOpenMessage)};return i.enterConversation=function(o){var i=s.defer();return n.JMessage.enterSingleConversation(o,appConfig.JPUSH_APPKEY,function(){i.resolve()},function(n){e.error("enterConversation failed cUserId(#cUserId#) error(#error#)".replace("#cUserId#",o).replace("#error#",n)),i.reject()}),i.promise},i.exitConversation=function(o){var i=s.defer();return n.JMessage.exitConversation(function(){i.resolve()},function(){e.error("exitConversation failed cUserId(#cUserId#) error(#error#)".replace("#cUserId#",o).replace("#error#",error)),i.reject()}),i.promise},i.init=r,i.login=g,i.logout=a,i.getMessageHistory=c,i.sendTextMessage=u,i.updateConversationList=f,i.getUsername=m,i.updateMessageNotifyCB=p,i.loginForPromise=t,i.testloginForPromise=l,i}angular.module("com.helporz.jim.services",["ionic"]).factory("jimService",["$log","$window","$document","$q",e])}();